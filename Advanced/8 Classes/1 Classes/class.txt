title: `<p class="chapterTitle">Class</p>`
body: `
<p class="chapterBody">JavaScript is an object-oriented programming (OOP) language we can use to model real-world items. In this lesson, you will learn how to make classes. Classes are a tool that developers use to quickly produce similar objects.</p>
<p class="chapterBody">Take, for example, an object representing a dog named halley. This dog’s name (a key) is "Halley" (a value) and has an age (another key) of 3 (another value). We create the halley object below:</p>
<div class="CodeMirror"><span class="cm-keyword">let</span> <span class="cm-def">halley</span> <span class="cm-operator">=</span> {
  <span class="cm-property">_name</span>: <span class="cm-string">'Halley'</span>,
  <span class="cm-property">_behavior</span>: <span class="cm-number">0</span>,

  <span class="cm-property">get</span> <span class="cm-property">name</span>() {
    <span class="cm-keyword">return</span> <span class="cm-keyword">this</span>.<span class="cm-property">_name</span>;
  },

  <span class="cm-property">get</span> <span class="cm-property">behavior</span>() {
    <span class="cm-keyword">return</span> <span class="cm-keyword">this</span>.<span class="cm-property">_behavior</span>;
  },

  <span class="cm-property">incrementBehavior</span>() {
    <span class="cm-keyword">this</span>.<span class="cm-property">_behavior</span><span class="cm-operator">++</span>;
  }
}</div>
<p class="chapterBody">Now, imagine you own a dog daycare and want to create a catalog of all the dogs who belong to the daycare. Instead of using the syntax above for every dog that joins the daycare, we can create a Dog class that serves as a template for creating new Dog objects. For each new dog, you can provide a value for their name.</p>
<p class="chapterBody">As you can see, classes are a great way to reduce duplicate code and debugging time.</p>
<p class="chapterBody">After we lay the foundation for classes in the first few exercises, we will introduce inheritance and static methods — two features that will make your code more efficient and meaningful.</p>
`